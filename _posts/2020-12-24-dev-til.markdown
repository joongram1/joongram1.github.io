---
layout: post
title: TIL 2020-12-24 
subtitle: TIL 
categories: dev
tags: til 앨리스코딩 파이썬 데이터분석 NumPy Pandas DataFrame
comments: true
---


> 2020-12-24 TIL(Today I learned)
---

> `앨리스코딩`의 `"파이썬으로 시작하는 데이터분석"` 강의를 듣고 작성한 노트 입니다.
---

* __Series__
  - pd.Series(name)
  
* __DataFrame__
  - 여러 개의 Series가 모여서 행과 열을 이룬 데이터
  - Series도 numpy array처럼 연산자를 쓸 수 있음
    + country = pd.DataFrame({'population' : population, 'gdp' : gdp})
    + gdp_per_capita = country['gdp'] / country['population']
    + country['gdp per capita'] = gdp_per_capita
    + country.index
    + country.columns
    
  - 저장과 불러오기 : 이미 만들어진 데이터 프레임을 저장/불러올 수 있다
    + country.to_csv("./country.csv")
    + conutry.to_excel("country.xlsx")
    + country = pd.read_csv("./country.csv")
    + country = pd.read_excel("country.xlsx")
    
* __Indexing / Slicing__
  - loc : 명시적인 인덱스를 참조하는 인덱싱/슬라이싱
    + country.loc['china'] : index값으로 출력
    + country.loc['japan' : 'korea', : 'population']
    
  - iloc : 파이썬 스타일 정수 인덱스 인덱싱/슬라이싱
    + country.iloc[0]
    + country.iloc[1:3, :2]
    
* __DataFrame 새 데이터 추가/수정__
  - dataframe = pd.DataFrame(columns = ['이름', '나이', '주소])
  - 리스트로 추가하는 방법
    + dataframe.loc[0] = ['철수', '25', '서울']
  - 딕셔너리로 추가하는 방법
    + dataframe.loc[1] = {'이름' : '영희', '나이' : '26', '주소' : '인천'}
  - 수정
    + dataframe.loc[1, '이름'] = '정훈'
  - 새 컬럼 추가
    + dataframe['전화번호'] = np.nan # nan = Not a number(비어있음)
    + dataframe.loc[0, '전화번호'] = '01012345678'
    
  - 컬럼 선택
    + 컬럼이름 하나만 있다 : Series
      dataframe["이름"]
    + 리스트로 들어가 있다 : DataFrame
      dataframe["이름", "주소", "나이"]
      
