---
layout: post
title: TIL 2020-12-27 
subtitle: TIL 
categories: dev
tags: til 앨리스코딩 파이썬 데이터분석 NumPy Pandas DataFrame matplotlib
comments: true
---


> 2020-12-27 TIL(Today I learned)
---

> `앨리스코딩`의 `"파이썬으로 시작하는 데이터분석"` 강의를 듣고 작성한 노트 입니다.
---

* __matplotlib__
  - 파이썬에서 데이터를 `그래프나 차트`로 시각화할 수 있는 라이브러리
  - import matplotlib.pyplot as plt
    + plt.plot(x, y)
    + plt.title("First Plot")
    + plt.xlabel("x")
    + plt.ylabel("y")
    
    
  - Object Oriented 방식(객체지향 방식)
    + fig, ax = plt.subplots()
    + ax.plot(x, y)
    + ax.set_title("First Plot")
    + ax.set_xlabel("x")
    + ax.set_ylabel("y")
    + fig.set_dpi(300)
    + fig.savefig("first_plot.png")
    + fig(figure) : Line(line plot), Marker(scatter plot)
    + Grid : 격자 / Miner tick : 작은 눈금 / Major tick : 큰 눈금 / Legend : 범례
    
  - 여러개 그래프 그리기
    + x = np.linspace(0, np.pi*4, 100)
    + fig.axes = plt.subplots(2, 1)
    + axes[0].plot(x, np.sin(x))
    + axes[1].plot(x, np.cos(x))
    
* __matplotlib 그래프들__
  - Line plot
    + fig, ax = plt.subplots()
    + x = np.arange(15)
    + y = x ** 2
    + ax.plot(x, y, linestyle=":", marker="*", color="#524FA1")
    + Line style 
      "-" : solid  
      "--" : dashed  
      "-." : dashdot  
      ":" : dotted  
    + Color: "r", "green", "0.8", "#524FA1" 
    + Marker : ".", "o", "v", "s", "*"
    + 축 경계 조정하기
      ax.set_xlim(-2, 12)  
      ax.set_ylim(-1.5, 1.5)
    + Legend(범례)  
      ax.legend(loc="upper right", shadow=True, fancybox=True, borderpad=2)


  - Scatter(산전도)
    + ax.plot(x, x**2, "o", markersize=15, markerfacecolor="white", markeredgecolor="blue")
    + fig, ax = plt.subplots()  
      x = np.random.randn(50)  
      y = np.random.randn(50)  
      colors = np.random.randint(0, 100, 50) : 0~100 사이 중 50개 랜덤 선택  
      sizes = 500 * np.pi * np.random.rand(50) ** 2  
      ax.scatter(x, y, c=colors, s=sizes, alpha=0.3) : alpha = 투명도  


  - Bar plot
    + fig, ax = plt.subplots(figsize=(12,4))
    + ax.bar(x, x*2)
    
    + x = np.random.rand(3)
      y = np.random.rand(3)  
      z = np.random.rand(3)  
      data = [x , y , z]  
      
    + fig, ax = plt.subplots()  
      x_ax = np.arange(3)  
      for i in x_ax:  
        ax.bar(x_ax, data[i], bottom=np.sum(data[:i], axis=0))  
      ax.set_xticks(x_ax)  
      ax.set_xticklabels(["A", "B", "C"])  
      
  - Histogram
    + fix, ax = plt.subplots()
    + data = np.random.randn(1000)
    + ax.hist(data, bins=50) : bins = 얼마만큼 막대기를 보여줄 것인지?
    
* __Matplotlib with pandas__
  - df = pd.read_csv("./president_heights.csv")  
    fig, ax = plt.subplots()  
    ax.plot(df["order"], df["height(cm)"], label="height")  
    ax.set_xlabel("order")  
    ax.set_ylabel("height(cm)")  
    ax.legend()  
    
  - fire = df[(df['Type 1'] == 'Fire') | (df['Type2'] == 'Fire')]  
    water = df[(df['Type 1'] == 'Water') | (df['Type2'] == 'Water')]  
    fig, ax = plt.subplots()  
    ax.scatter(fire['Attack'], fire['Defense'], color='R', label='Fire', marker='*', s=50)  
    ax.scatter(water['Attack'], water['Defense'], color='B', label='Water', s=25)  
    ax.set_xlabel("Attack")  
    ax.set_ylabel("Defense")  
    ax.legend(loc="upper right")  
    
    
