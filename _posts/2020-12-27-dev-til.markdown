---
layout: post
title: TIL 2020-12-27 
subtitle: TIL 
categories: dev
tags: til 앨리스코딩 파이썬 데이터분석 NumPy Pandas DataFrame matplotlib
comments: true
---


> 2020-12-27 TIL(Today I learned)
---

##### `앨리스코딩`의 `"파이썬으로 시작하는 데이터분석"` 강의를 듣고 작성한 노트 입니다.
---

* __matplotlib__
  - 파이썬에서 데이터를 `그래프나 차트`로 시각화할 수 있는 라이브러리
  - import matplotlib.pyplot as plt
    + plt.plot(x, y)
    + plt.title("First Plot")
    + plt.xlabel("x")
    + plt.ylabel("y")      
    


  ~~~python
  # Matplotlib 기초
  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt
  x = [1,2,3,4,5]
  y = [1,2,3,4,5]

  fig, ax = plt.subplots() # subplots()는 1개의 figure와 1개 이상의 그래프(ax) 생성 가능
  ax.plot(x,y)
  ax.set_title("First Plot")
  ax.set_xlabel("x") # x축에 x 표시
  ax.set_ylabel("y") # y축에 y 표시
  ~~~

  - Object Oriented 방식(객체지향 방식)
    + fig, ax = plt.subplots()
    + ax.plot(x, y)
    + ax.set_title("First Plot")
    + ax.set_xlabel("x")
    + ax.set_ylabel("y")
    + fig.set_dpi(300)
    + fig.savefig("first_plot.png")
    + fig(figure) : Line(line plot), Marker(scatter plot)
    + Grid : 격자 / Miner tick : 작은 눈금 / Major tick : 큰 눈금 / Legend : 범례
    
  - 여러개 그래프 그리기
    + x = np.linspace(0, np.pi*4, 100)
    + fig.axes = plt.subplots(2, 1)
    + axes[0].plot(x, np.sin(x))
    + axes[1].plot(x, np.cos(x))  
    
* __matplotlib 그래프들__
  - Line plot
    + fig, ax = plt.subplots()
    + x = np.arange(15)
    + y = x ** 2
    + ax.plot(x, y, linestyle=":", marker="*", color="#524FA1")
    + Line style 
      "-" : solid  
      "--" : dashed  
      "-." : dashdot  
      ":" : dotted  
    + Color: "r", "green", "0.8", "#524FA1" 
    + Marker : ".", "o", "v", "s", "*"
    + 축 경계 조정하기
      ax.set_xlim(-2, 12)  
      ax.set_ylim(-1.5, 1.5)
    + Legend(범례)  
      ax.legend(loc="upper right", shadow=True, fancybox=True, borderpad=2)    



  ~~~python
  # Line 그래프 그리기
  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt
  x = np.arange(10)

  fig, ax = plt.subplots()
  ax.plot(x, x, label='y=x', marker='o', color='blue', linestyle=':') # 기본 점선(:)이며, 원점(o)을 찍는 파란색 그래프 생성
  ax.plot(x, x**2, label='y=x^2', marker='^', color='red', linestyle='--') # 기본 (--)형태이며, 삼각형 점을 찍는 빨간색 그래프 생성
  ax.set_xlabel("x") # x축에 x 표시
  ax.set_ylabel("y") # y축에 y 표시
  ax.legend(loc='upper left', shadow=True, fancybox=True, borderpad=2) # 좌측 상단(위치), 그림자 있는, 박스표시 있으며, 크기는 2사이즈의 범례 생성
  ~~~



  - Scatter(산점도)    
  
  
  
  ~~~python
  # Scatter(산점도) 그리기
  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt

  fig, ax = plt.subplots()
  x = np.arange(10)
  ax.plot(x, x**2, "o", markersize=15, markerfacecolor='white', markeredgecolor='blue') 
  # 원점(o)으로 그래프를 그리되, 사이즈 15/원 안 색상 흰색/원 테두리 색상 파란색으로 그리기

  x = np.random.randn(50)
  y = np.random.randn(50)
  colors = np.random.randint(0, 100, 50) # 0~100 사이 랜덤 50개 수 선택
  sizes = 500 * np.pi * np.random.rand(50) ** 2 # 원주율(pi)값에 랜덤한 수를 제곱한 후 500 곱한만큼으로 사이즈 설정
  ax.scatter(x, y, c = colors, s = sizes, alpha = 0.3) # alpha = 투명도
  ~~~


  - Bar plot
    + fig, ax = plt.subplots(figsize=(12,4))
    + ax.bar(x, x*2)
    
    + x = np.random.rand(3)
      y = np.random.rand(3)  
      z = np.random.rand(3)  
      data = [x , y , z]  
      
    + fig, ax = plt.subplots()  
      x_ax = np.arange(3)  
      for i in x_ax:  
        ax.bar(x_ax, data[i], bottom=np.sum(data[:i], axis=0))  
      ax.set_xticks(x_ax)  
      ax.set_xticklabels(["A", "B", "C"])  
      
  - Histogram
    + fix, ax = plt.subplots()
    + data = np.random.randn(1000)
    + ax.hist(data, bins=50) : bins = 얼마만큼 막대기를 보여줄 것인지?    
    
    
    
  ~~~python
  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt
  import matplotlib.font_manager as fm # font_manager 임포트(폰트 설정 가능)
  fname='/.NanumBarunGothic.ttf' # 나눔바른고딕 폰트 선택
  font = fm.FontProperties(fname = fname).get_name()
  plt.rcParams["font.family"] = font

  x = np.array(["축구","야구","농구","배드민턴","탁구"])
  y = np.array([18, 7, 12, 10, 8])
  z = np.random.randn(1000) # 1000개의 정규분포 난수를 설정

  fig, axes = plt.subplots(1,2, figsize=(8,4)) 
  # 하나의 도화지(figure)에 1 * 2 모양으로 그래프를 그리기, 즉 그래프 2개를 가로로 배치하여 그린다

  # Bar 그래프
  axes[0].bar(x, y) # axes(그래프)중 첫번째는 x, y를 각 축으로 하는 bar 그래프로 생성
  # Histogram
  axes[1].hist(z, bins = 50) # axes 중 두번째는 z를 50개 등급(bins)로 나눈 히스토그램으로 생성
  ~~~  
    
    
    
* __Matplotlib with pandas__
  - df = pd.read_csv("./president_heights.csv")  
    fig, ax = plt.subplots()  
    ax.plot(df["order"], df["height(cm)"], label="height")  
    ax.set_xlabel("order")  
    ax.set_ylabel("height(cm)")  
    ax.legend()    
    


  ~~~python
  # Matplotlib with Pandas - 포켓몬 데이터 활용하여 시각화 진행
  import numpy as np
  import pandas as pd
  import matplotlib.pyplot as plt
  df = pd.read_csv("./data/pokemon.csv")
  fire = df[(df["Type 1"]) == "Fire") | ((df["Type 2"]) == "Fire") # df의 Type 1 혹은 Type 2가 Fire인 데이터를 fire로 저장
  water = df[(df["Type 1"]) == "Water") | ((df["Type 2"]) == "Water") # df의 Type 1 혹은 Type 2가 Water인 데이터를 water로 저장 

  fig, ax = plt.subplots()
  ax.scatter(fire['Attack'], fire['Defense'], color='R', label='Fire', marker='*', s=50) 
  # fire의 Attack값을 x값, fire의 Defense값을 y값으로 하고, 50사이즈의 빨간 색상 별점을 찍는 산점도 그리기  
  ax.scatter(water['Attack'], water['Defense'], color='B', label='Water', s=25)
  # water의 Attack값을 x값, water의 Defense값을 y값으로 하고, 25사이즈의 파란 색상 원점을 찍는 산점도 그리기
  ax.set_xlabel("Attack")
  ax.set_ylabel("Defense")
  ax.legend(loc="upper right") # 범례 위치 : 우측 상단
  ~~~  


---

matplotlib으로 쉽게 그래프를 그릴 수 있었다.  
데이터 분석 결과를 보여줄 때 적극 활용할 것 같다.

---
